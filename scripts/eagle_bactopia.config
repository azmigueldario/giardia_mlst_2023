params {
    // To avoid crashing jobs processing larger Giardia spp. genomes
    max_cpus        = 4
    min_time        = 120
    max_time        = 1500
    max_memory      = 90
    max_downloads   = 8
    }

profiles {
    slurm {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.runOptions = '--bind $APPTAINERENV_TMPDIR:/tmp,/project,/scratch'
        singularity.envWhitelist = ['APPTAINERENV_TMPDIR']
                
        executor {
            // Execute in slurm by default, max 7 concurrent jobs
            name = 'slurm'
            submitRateLimit = '30/min'
            queueSize = 7  
        }
        
        process {
            
            // Add more memory, time, and CPU for Giardia spp. assembly. Max 4 simultaneous of these jobs
            
            withName: ASSEMBLER {
                memory = { meta.runtype == 'hybrid' || meta.runtype == 'ont' || params.use_unicycler ? check_max((48.GB * task.attempt), RESOURCES.MAX_MEMORY, 'memory') : check_max((24.GB * task.attempt), RESOURCES.MAX_MEMORY, 'memory')}
                time = { meta.runtype == 'hybrid' || meta.runtype == 'ont'  ||  params.use_unicycler ? check_max( 6.h * task.attempt, (params.max_time).m, 'time' ) : check_max( 7.h * task.attempt, (params.max_time).m, 'time' )}
                cpus = { 8 }
                maxForks = 5 
                    }
                    
            // assembly_qc should not take more than 12h
                    
            withLabel: 'assembly_qc' {
                memory = {check_max(12.GB * task.attempt, RESOURCES.MAX_MEMORY, 'memory' )}
                time = {check_max( 4.h * task.attempt, (params.max_time).m , 'time' )}
                    }
                    
            // to prevent conflict between HPC and container Python interpreter and modules
                    
            withLabel: 'minmer_sketch|minmer_query' {
                containerOptions = "-c --bind /project,/scratch" }
                
            // Boilerplate options
            
            pollInterval    = '60 sec'
            submitRateLimit = '15/60min'
            queueSize       = 7
            errorStrategy   = 'retry'
            maxRetries      = 2
            queue           = 'cpubase_bycore_b1'
                }
            }
        }
